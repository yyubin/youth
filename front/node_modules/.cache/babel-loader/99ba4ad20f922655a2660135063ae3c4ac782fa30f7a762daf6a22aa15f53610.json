{"ast":null,"code":"var _jsxFileName = \"/Users/yubin/Documents/youth/prototype/webrtc/front/src/Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io(\"http://localhost:4000\");\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState(\"\");\n  const myVideo = useRef([]);\n  const userVideo = useRef([]);\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on(\"me\", id => setMe(id));\n    socket.on(\"callUser\", _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"1tPo1ef3MpDHdfJxc3sbs1MH13I=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","_ref2","from","callerName","signal","isReceivingCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yubin/Documents/youth/prototype/webrtc/front/src/Context.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst SocketContext = createContext();\n\nconst socket = io(\"http://localhost:4000\");\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState(\"\");\n\n  const myVideo = useRef([]);\n  const userVideo = useRef([]);\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on(\"me\", (id) => setMe(id));\n\n    socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"answerCall\", { signal: data, to: call.from });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on(\"callAccepted\", (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider\n      value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}